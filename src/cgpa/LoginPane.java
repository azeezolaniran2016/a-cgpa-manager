/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package cgpa;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author AZYSS
 */
public class LoginPane extends javax.swing.JPanel {

    /**
     * Creates new form LoginPane
     */
    public LoginPane() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topLabel = new javax.swing.JLabel();
        fieldPanel = new javax.swing.JPanel();
        userNameLabel = new javax.swing.JLabel();
        userNameTextField = new javax.swing.JTextField();
        pwLabel = new javax.swing.JLabel();
        pwField = new javax.swing.JPasswordField();
        buttonsPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        viewPWButton = new javax.swing.JRadioButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        topLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/multimedia/png/loginIcon.png"))); // NOI18N
        add(topLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 370, 40));

        fieldPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        fieldPanel.setOpaque(false);

        userNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        userNameLabel.setText("Username");

        userNameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userNameTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userNameTextField.setFocusable(false);

        pwLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pwLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pwLabel.setText("Password");

        pwField.setDocument(new JTextFieldLimit(25));
        pwField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout fieldPanelLayout = new javax.swing.GroupLayout(fieldPanel);
        fieldPanel.setLayout(fieldPanelLayout);
        fieldPanelLayout.setHorizontalGroup(
            fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fieldPanelLayout.createSequentialGroup()
                .addGroup(fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pwLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userNameTextField)
                    .addComponent(pwField, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        fieldPanelLayout.setVerticalGroup(
            fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fieldPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pwLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(fieldPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, -1, -1));

        buttonsPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 255), 1, true));
        buttonsPanel.setOpaque(false);

        okButton.setText("Login ");

        cancelButton.setText("Cancel");

        viewPWButton.setText("View Password");
        viewPWButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPWButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewPWButton)
                .addGap(74, 74, 74))
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(buttonsPanelLayout.createSequentialGroup()
                        .addGap(0, 3, Short.MAX_VALUE)
                        .addComponent(viewPWButton))
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        add(buttonsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 320, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewPWButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPWButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viewPWButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel fieldPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JPasswordField pwField;
    private javax.swing.JLabel pwLabel;
    private javax.swing.JLabel topLabel;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameTextField;
    private javax.swing.JRadioButton viewPWButton;
    // End of variables declaration//GEN-END:variables
    final JDialog dialogFrame = new JDialog();
    final static int PASSWORDS_MATCH = 1 ;
    final static int PASSWORDS_DONOT_MATCH = 0;
    private static int data = 0;
    
    public LoginPane(String uName, final String pw){
        this.initComponents();
        
        dialogFrame.setIconImage(PNGGetter.getFrameIcon());
        
        this.pwField.setDocument(new JTextFieldLimit(25));
        this.userNameTextField.setText(uName);
        this.userNameTextField.requestFocus();
        this.viewPWButton.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                if(viewPWButton.isSelected())
                    pwField.setEchoChar((char)0);
                else
                    pwField.setEchoChar('‚óè');
            }
        });
        
        this.cancelButton.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
               int option = JOptionPane.showConfirmDialog(LoginPane.this, "Do you really want to cancel and exit ?",
                        "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(option == JOptionPane.YES_OPTION)
                    System.exit(0);
            }
        });
        
        this.okButton.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("Ok button pressed");
                //if passwords match
                if(new String(LoginPane.this.pwField.getPassword()).equals(pw))
                    dialogFrame.dispose();
                else
                    JOptionPane.showConfirmDialog(LoginPane.this, "Wrong Password",
                        "", JOptionPane.PLAIN_MESSAGE, JOptionPane.ERROR_MESSAGE);
                //LoginPane.this.loginPaneDefaultOKAction(pw);
                    
            }
        });
        
        this.setPreferredSize(new Dimension(340,205));
        
        dialogFrame.add(this);
        
        this.pwField.addKeyListener(new KeyListener(){

            @Override
            public void keyTyped(KeyEvent e) {
                //do nothing
            }

            @Override
            public void keyPressed(KeyEvent e) {
                //verify login
                if(e.getKeyCode() == KeyEvent.VK_ENTER){
                    LoginPane.this.loginPaneDefaultOKAction(pw);
                }
            }

            @Override
            public void keyReleased(KeyEvent e) {
                //do nothing
            }
        });
        
        dialogFrame.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
        dialogFrame.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e){
                int option = JOptionPane.showConfirmDialog(LoginPane.this, "Do you really want to cancel and exit ?",
                        "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(option == JOptionPane.YES_OPTION)
                    System.exit(0);
            }
        });
        dialogFrame.setSize(340, 210);
        //dialogFrame.pack();
        dialogFrame.setResizable(false);
        dialogFrame.setTitle(Department.APP_TITLE );
        dialogFrame.setLocation(DriverClass.setPositionToCenter(dialogFrame.getWidth(), dialogFrame.getHeight()));
        dialogFrame.setModal(true);
        dialogFrame.setVisible(true);
        
    }
    
    static final int createLoginPane(String uName, final String pw){
        //Note this Method doesnt return until the login pane is disposed by either the ok or cancel button
        final LoginPane pane = new LoginPane(uName, pw);
        
        //afterLogin Pane is disposed check its values
        if((new String(pane.pwField.getPassword()).equals(pw))){
            data = LoginPane.PASSWORDS_MATCH ;
            pane.dialogFrame.dispose();
        }else{
            data = LoginPane.PASSWORDS_DONOT_MATCH ;
            pane.dialogFrame.dispose();
        }
        return data ;
    }
    
    
    void loginPaneDefaultOKAction(String pw){
        if(new String(LoginPane.this.pwField.getPassword()).equals(pw)){
                    //do nothing
                    dialogFrame.dispose();
                }else{
                    JOptionPane.showMessageDialog(LoginPane.this, "Wrong Password", "", JOptionPane.ERROR_MESSAGE);
                }
    }
    
    static boolean loginPane(String uN, String pw){
        final boolean returnValue = false ;
        LoginPane lgPane = new LoginPane(uN, pw);
        JDialog dialog = new JDialog();
        dialog.add(lgPane);
        dialog.pack();
        dialog.setLocation(DriverClass.setPositionToCenter(dialog.getWidth(), dialog.getHeight()));
        dialog.setVisible(true);
        
        return returnValue ;
    }

    
    JButton getOkButton(){
        return this.okButton ;
    }
}
