/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package cgpa;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author AZYSS
 */
public class CourseCreator extends javax.swing.JPanel {

    /**
     * Creates new form CourseCreator
     */
    public CourseCreator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        courseCodeLabel = new javax.swing.JLabel();
        courseTitleLabel = new javax.swing.JLabel();
        courseCodeField = new javax.swing.JTextField();
        buttonPanel = new javax.swing.JPanel();
        addCourseButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        courseTitleField = new javax.swing.JTextField();

        courseCodeLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        courseCodeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        courseCodeLabel.setText("Course Code :");
        courseCodeLabel.setFocusable(false);

        courseTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        courseTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        courseTitleLabel.setText("Course Title :");
        courseTitleLabel.setFocusable(false);

        courseCodeField.setColumns(25);
        courseCodeField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        courseCodeField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        buttonPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));

        addCourseButton.setText("Create");
        addCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(addCourseButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        courseTitleField.setColumns(25);
        courseTitleField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        courseTitleField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        courseTitleField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseTitleFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(courseCodeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseTitleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(courseCodeField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseTitleField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseTitleField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void courseTitleFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseTitleFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseTitleFieldActionPerformed

    private void addCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addCourseButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCourseButton;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField courseCodeField;
    private javax.swing.JLabel courseCodeLabel;
    private javax.swing.JTextField courseTitleField;
    private javax.swing.JLabel courseTitleLabel;
    // End of variables declaration//GEN-END:variables
    static String cCode ;
    static String cTitle ;
    static Course course ;
    static final int COURSE_CODE_MIN_LENGTH = 3;
    static final int COURSE_TITLE_MIN_LENGTH = 0 ;
    
    /**
     * Method to edit a course title and code
     * @param cToEdit course to be edited
     */
    static void editCourseCodeAndLabel(final Course cToEdit){
        final JDialog window = new JDialog();
        window.setModal(true);
        window.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        window.setTitle("Edit Course " + cToEdit.getCourseCode());
        final CourseCreator cCreator = new CourseCreator("");
        
        //set the coursecode textField and coursetitle text field to the cToEdit ones
        cCreator.getCourseCodeTextField().setText(cToEdit.getCourseCodeLabel().getText());
        cCreator.getCourseTitleTextField().setText(cToEdit.getCourseCodeLabel().getToolTipText());
        
        //set the cancel button action 
        cCreator.getCancelButton().addActionListener(new ActionListener(){

                @Override
                public void actionPerformed(ActionEvent e) {
                    window.dispose();
                }
            });
        
        cCreator.getOKButton().setText("Submit");
        cCreator.getOKButton().addActionListener(new ActionListener(){

            @Override
                public void actionPerformed(ActionEvent e) {
                    cCode = cCreator.getCourseCodeTextField().getText();
                    cTitle = cCreator.getCourseTitleTextField().getText() ;
                    if(cCode.length() < COURSE_CODE_MIN_LENGTH ){
                        JOptionPane.showMessageDialog(cCreator, "Course Edit Error\n"
                                + " Invalid Course Code ", "", JOptionPane.ERROR_MESSAGE);
                        cCreator.getCourseCodeTextField().requestFocus();
                    }else if(cTitle.length() < COURSE_TITLE_MIN_LENGTH){
                        JOptionPane.showMessageDialog(cCreator, "Course Edit Error\n"
                                + " Invalid Course Title ", "", JOptionPane.ERROR_MESSAGE);
                        cCreator.getCourseTitleTextField().requestFocus();
                    }
                    else{
                        //create the course
                        cToEdit.getCourseCodeLabel().setText(cCode.toUpperCase());  //make the code and title upperCase
                        cToEdit.getCourseCodeLabel().setToolTipText(cTitle.toUpperCase());
                        window.dispose();
                    }
                }
            });
        window.add(cCreator);
        window.setLocationRelativeTo(cToEdit);
        window.pack();
        window.setResizable(false);
        window.setIconImage(PNGGetter.getFrameIcon());
        window.setVisible(true);
    }
    
    static Course createCourse(int courseType, int courseNum, JComponent relativeComponent){
        //final Course c = null ;
        final JDialog window = new JDialog();
        window.setModal(true);
        window.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        window.setTitle("Create Course #" + courseNum);
        final CourseCreator cCreator = new CourseCreator("");
        cCreator.getCancelButton().addActionListener(new ActionListener(){

                @Override
                public void actionPerformed(ActionEvent e) {
                    window.dispose();
                }
            });
        window.add(cCreator);
        
        //String cCode = " not yet defined" ;
        //String cTitle = " not yet defined";
        if (courseType == Course.FIVE_POINT_GRADE_SYSTEM){
            //five point grade system
            
            //window.setOpacity(1.5f);
            //window.setUndecorated(true);
            
            
            cCreator.getOKButton().addActionListener(new ActionListener(){

                @Override
                public void actionPerformed(ActionEvent e) {
                    cCode = cCreator.getCourseCodeTextField().getText();
                    cTitle = cCreator.getCourseTitleTextField().getText() ;
                    if(cCode.length() < COURSE_CODE_MIN_LENGTH ){
                        JOptionPane.showMessageDialog(cCreator, "Course Creation Error\n"
                                + " Invalid Course Code ", "", JOptionPane.ERROR_MESSAGE);
                        cCreator.getCourseCodeTextField().requestFocus();
                    }else if(cTitle.length() < COURSE_TITLE_MIN_LENGTH){
                        JOptionPane.showMessageDialog(cCreator, "Course Creation Error\n"
                                + " Invalid Course Title ", "", JOptionPane.ERROR_MESSAGE);
                        cCreator.getCourseTitleTextField().requestFocus();
                    }
                    else{
                        //create the course
                        course = new Course(cCode.toUpperCase(), cTitle.toUpperCase());  //make the code and title upperCase
                    window.dispose();
                    }
                }
            });
            //cCode = cCreator.getCourseCodeTextField().getText();
            //cTitle = cCreator.getCourseTitleTextField().getText();
        }else if(courseType == Course.FOUR_POINT_GRADE_SYSTEM){
            //four point grade system
            
            cCreator.getOKButton().addActionListener(new ActionListener(){

                @Override
                public void actionPerformed(ActionEvent e) {
                    cCode = cCreator.getCourseCodeTextField().getText();
                    cTitle = cCreator.getCourseTitleTextField().getText() ;
                    if(cCode.length() < 3 ){
                        JOptionPane.showMessageDialog(cCreator, "Course Creation Error\n"
                                + " Invalid Course Code ", "", JOptionPane.ERROR_MESSAGE);
                        cCreator.getCourseCodeTextField().requestFocus();
                    }else if(cTitle.length() < 10){
                        JOptionPane.showMessageDialog(cCreator, "Course Creation Error\n"
                                + " Invalid Course Title ", "", JOptionPane.ERROR_MESSAGE);
                        cCreator.getCourseTitleTextField().requestFocus();
                    }
                    else{
                        //create the course4
                        course = new Course4(cCode.toUpperCase(), cTitle.toUpperCase());  //make the code and title upperCase
                    window.dispose();
                    }
                }
            });
            
        }
        window.setLocationRelativeTo(relativeComponent);
        window.pack();
        window.setResizable(false);
        window.setIconImage(PNGGetter.getFrameIcon());
        window.setVisible(true);
        return course ;
    }
    
    CourseCreator(String title){
        this.initComponents();
        this.courseCodeField.setDocument(new JTextFieldLimit(DB_Manipulator.COURSE_CODE_LENGTH));  //database limit of characters is 8
        this.courseTitleField.setDocument(new JTextFieldLimit(DB_Manipulator.COURSE_TITLE_LENGTH)); // database limit of course title characters is 100
     }
    JTextField getCourseTitleTextField(){
        return this.courseTitleField ;
    }
    
    JTextField getCourseCodeTextField(){
        return this.courseCodeField;
    }
    JButton getOKButton(){
        return this.addCourseButton;
    }
    
    JButton getCancelButton(){
        return this.cancelButton;
    }
    
    

}
